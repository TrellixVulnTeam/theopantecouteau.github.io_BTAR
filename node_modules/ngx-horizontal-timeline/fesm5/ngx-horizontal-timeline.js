import { __values } from 'tslib';
import { Injectable, NgModule, defineInjectable, Component, Input } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgxHorizontalTimelineService = /** @class */ (function () {
    function NgxHorizontalTimelineService() {
    }
    NgxHorizontalTimelineService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    NgxHorizontalTimelineService.ctorParameters = function () { return []; };
    /** @nocollapse */ NgxHorizontalTimelineService.ngInjectableDef = defineInjectable({ factory: function NgxHorizontalTimelineService_Factory() { return new NgxHorizontalTimelineService(); }, token: NgxHorizontalTimelineService, providedIn: "root" });
    return NgxHorizontalTimelineService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgxHorizontalTimelineComponent = /** @class */ (function () {
    function NgxHorizontalTimelineComponent() {
    }
    /**
     * @return {?}
     */
    NgxHorizontalTimelineComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?} item
     * @return {?}
     */
    NgxHorizontalTimelineComponent.prototype.activeItem = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        var e_1, _a;
        try {
            for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                var i = _c.value;
                i.active = undefined;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        item.active = true;
        if (item.command) {
            item.command();
        }
    };
    /**
     * @param {?} item
     * @return {?}
     */
    NgxHorizontalTimelineComponent.prototype.getColor = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        if (!item.color) {
            return null;
        }
        if (item.active) {
            return '#' + item.color;
        }
        else {
            return '#' + this.lighten(item.color, 50);
        }
    };
    /**
     * @param {?} col
     * @param {?} amt
     * @return {?}
     */
    NgxHorizontalTimelineComponent.prototype.lighten = /**
     * @param {?} col
     * @param {?} amt
     * @return {?}
     */
    function (col, amt) {
        col = parseInt(col, 16);
        return (
        // tslint:disable-next-line:no-bitwise
        ((col & 0x0000ff) + amt) | ((((col >> 8) & 0x00ff) + amt) << 8) | (((col >> 16) + amt) << 16)).toString(16);
    };
    NgxHorizontalTimelineComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-htl-horizontal-timeline',
                    template: "<div id=\"timeline-wrap\">\n  <div class=\"navigation\">\n\n    <span *ngFor=\"let item of items\" [class]=\"item.styleClass? item.styleClass: ''\">\n      <div class=\"timeline-label\" *ngIf=\"item.label\">{{item.label}}</div>\n\n      <div (click)=\"activeItem(item)\" [style.background-color]=\"getColor(item)\"\n        title=\"{{item.title}}\"\n        [class]=\"\n          item.active\n            ? 'marker timeline-icon marker-active'\n            : 'marker timeline-icon'\">\n        <i [class]=\"item.icon\"></i>\n      </div>\n    </span>\n    <div class=\"timeline\"></div>\n  </div>\n</div>\n",
                    styles: [".navigation{display:flex;flex-flow:row wrap;justify-content:space-around;align-items:center}.timeline{height:1px;width:100%;position:absolute;background:#aabbc4}.timeline:before{background:0 0}.timeline-label{text-align:center;position:absolute;width:50px;bottom:55px;color:#555;font-family:\"Source Sans Pro\",\"Helvetica Neue\",Helvetica,Arial,sans-serif!important;font-weight:400}@media all and (max-width:500px){.navigation{flex-direction:row;justify-content:initial}.timeline{height:0}.marker{margin-top:25px}.timeline-title{position:relative;bottom:-14px}}#timeline-wrap{margin:4% 5%;position:relative}.marker{z-index:1;color:#fff;width:50px;height:50px;line-height:50px;font-size:1.4em;text-align:center;position:relative;background-color:#999;border-radius:50%}.marker:hover{-webkit-transform:scale(1.3);transform:scale(1.3);cursor:pointer;transition:.3s}.timeline-icon{background-color:#7e8aaf}.marker-active{-webkit-transform:scale(1.3);transform:scale(1.3);background-color:#3e4f88}"]
                }] }
    ];
    /** @nocollapse */
    NgxHorizontalTimelineComponent.ctorParameters = function () { return []; };
    NgxHorizontalTimelineComponent.propDecorators = {
        items: [{ type: Input }]
    };
    return NgxHorizontalTimelineComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgxHorizontalTimelineModule = /** @class */ (function () {
    function NgxHorizontalTimelineModule() {
    }
    NgxHorizontalTimelineModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [NgxHorizontalTimelineComponent],
                    imports: [
                        CommonModule
                    ],
                    exports: [NgxHorizontalTimelineComponent]
                },] }
    ];
    return NgxHorizontalTimelineModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NgxHorizontalTimelineService, NgxHorizontalTimelineComponent, NgxHorizontalTimelineModule };

//# sourceMappingURL=ngx-horizontal-timeline.js.map