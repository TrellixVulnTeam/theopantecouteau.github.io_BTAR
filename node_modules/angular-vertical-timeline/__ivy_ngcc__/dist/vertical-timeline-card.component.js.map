{"version":3,"file":"vertical-timeline-card.component.js","sources":["vertical-timeline-card.component.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAMM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAM;AACN;AACA;AACA;AACA","sourcesContent":["import { Component, Input, HostBinding } from '@angular/core';\r\nvar VerticalTimelineCardComponent = /** @class */ (function () {\r\n    function VerticalTimelineCardComponent() {\r\n        this.disabled = false;\r\n        this.isATimelineItem = false;\r\n    }\r\n    VerticalTimelineCardComponent.prototype.ngOnInit = function () {\r\n        this.isATimelineItem = true; // set class `timeline-item` on host `<div>`\r\n        if (this.dateValue === null || this.dateValue === undefined) {\r\n            this.dateValue = new Date();\r\n        }\r\n        if (this.color === null || this.color === undefined) {\r\n            this.color = '#3F51B5';\r\n        }\r\n        if (this.isLight(this.color)) {\r\n            this.textColor = '#000000';\r\n        }\r\n        else {\r\n            this.textColor = '#FFFFFF';\r\n        }\r\n    };\r\n    VerticalTimelineCardComponent.prototype.isLight = function (hexColor) {\r\n        var R = parseInt(hexColor.slice(1, 3), 16);\r\n        var G = parseInt(hexColor.slice(3, 5), 16);\r\n        var B = parseInt(hexColor.slice(5, 7), 16);\r\n        var maxBrightness = this.calculateBrightness(255, 255, 255);\r\n        var brightness = this.calculateBrightness(R, G, B);\r\n        var pBrightness = brightness / maxBrightness;\r\n        return pBrightness > 0.5;\r\n    };\r\n    // HSP rule sqrt( .299 R2 + .587 G2 + .114 B2 ), see http://alienryderflex.com/hsp.html\r\n    // HSP rule sqrt( .299 R2 + .587 G2 + .114 B2 ), see http://alienryderflex.com/hsp.html\r\n    VerticalTimelineCardComponent.prototype.calculateBrightness = \r\n    // HSP rule sqrt( .299 R2 + .587 G2 + .114 B2 ), see http://alienryderflex.com/hsp.html\r\n    function (R, G, B) {\r\n        return Math.sqrt((0.299 * Math.pow(R, 2)) +\r\n            (0.587 * Math.pow(G, 2)) +\r\n            (0.114 * Math.pow(B, 2)));\r\n    };\r\n    VerticalTimelineCardComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'vertical-timeline-card',\r\n                    template: \"\\n      <div>\\n        <div class=\\\"timeline-img\\\" [style.background]=\\\"color\\\">\\n          <p *ngIf=\\\"!timeString || timeString === ''\\\" [style.color]=\\\"textColor\\\">{{dateValue | date: \\\"HH:mm\\\"}}</p>\\n          <p *ngIf=\\\"timeString && timeString != ''\\\" [style.color]=\\\"textColor\\\">{{timeString}}</p>\\n        </div>\\n\\n        <div class=\\\"timeline-content\\\" [ngClass]=\\\"{'disabled-element': disabled}\\\">\\n          <div class=\\\"date\\\" [style.background]=\\\"color\\\">\\n            <p [style.color]=\\\"textColor\\\">{{dateValue | date:\\\"dd MMMM yyyy\\\"}}</p>\\n          </div>\\n\\n          <div class=\\\"inner-content\\\">\\n            <ng-content></ng-content>\\n          </div>\\n        </div>\\n      </div>\\n    \",\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    VerticalTimelineCardComponent.propDecorators = {\r\n        \"dateValue\": [{ type: Input },],\r\n        \"timeString\": [{ type: Input },],\r\n        \"color\": [{ type: Input },],\r\n        \"disabled\": [{ type: Input },],\r\n        \"isATimelineItem\": [{ type: HostBinding, args: ['class.timeline-item',] },],\r\n    };\r\n    return VerticalTimelineCardComponent;\r\n}());\r\nexport { VerticalTimelineCardComponent };\r\n"]}